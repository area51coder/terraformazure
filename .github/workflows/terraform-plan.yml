name: 'Terraform Plan'
## ...
on:
  pull_request:

env:
  TF_CLOUD_ORGANIZATION: "area51coder"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "azureterra"
  CONFIG_DIRECTORY: "./"
## ...

## ...
jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
## ...

## ...
      - name: Terraform run 1
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.TF_DIRECTORY }}
          
      - name: Terraform run 2
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
        id: run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          
      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
         # plan: ${{ steps.plan-run.outputs.plan_id }}
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}          

      - name: show output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          plan: ${{ steps.run.outputs.plan_id }}

      - name: Reference Plan Output
        run: |
          echo "Plan status: ${{ steps.plan-output.outputs.plan_status }}"
          echo "Resources to Add: ${{ steps.plan-output.outputs.add }}"
          echo "Resources to Change: ${{ steps.plan-output.outputs.change }}"
          echo "Resources to Destroy: ${{ steps.plan-output.outputs.destroy }}"
